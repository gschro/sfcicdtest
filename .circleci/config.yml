version: 2
references:
  container_config: &container_config
    docker:
      - image: circleci/node:8.11-stretch
    environment:
      - HUB_USER: testuser
  install_sfdx: &install_sfdx
    run:
      name: Install SFDX CLI
      command: sudo npm install sfdx-cli@6.56.0 --global
  decrypt_devhub_key: &decrypt_devhub_key
    run:
      name: Decrypt DevHub key
      command: >
        openssl enc
        -d
        -nosalt
        -aes-256-cbc
        -in .circleci/server.key.enc
        -out server.key
        -a
        -K $KEY
        -iv $IV
  decrypt_devhub_key_working_ok: &decrypt_devhub_key_working_ok
    run:
      name: Decrypt DevHub key
      command: |
        openssl version
        openssl enc -d -aes-256-cbc -md sha256 -in .circleci/server.key.enc -out server.key -K $KEY -iv $IV
        find . -name "*.key"        
  authenticate_sfdx: &authenticate_sfdx
    run:
      name: Authenticate sfdx
      command: >
        sfdx force:auth:jwt:grant
        --clientid "$CONSUMERKEY"
        --jwtkeyfile server.key
        --username "$USERNAME"
        --setdefaultdevhubusername   
  convert_source: &convert_source
    run:
      name: Convert Source
      command: >
        sfdx force:source:convert
        --rootdir force-app
        --outputdir unpackaged
jobs:
  test_deploy:
    <<: *container_config
    steps:
      - checkout
      - *install_sfdx
      - *decrypt_devhub_key
      - *authenticate_sfdx
      - *convert_source
      - run:
          name: Deploy
          command: >
            sfdx force:mdapi:deploy
            --deploydir unpackaged
            --targetusername "$USERNAME"
            --testlevel RunLocalTests
            --wait 10
            --checkonly

  deploy_to_production:
    <<: *container_config
    steps:
      - checkout
      - *install_sfdx
      - *decrypt_devhub_key
      - *authenticate_sfdx
      - *convert_source
      - run:
          name: Deploy
          command: >
            sfdx force:mdapi:deploy
            --deploydir unpackaged
            --targetusername "$USERNAME"
            --testlevel RunLocalTests
            --wait 10

workflows:
  version: 2
  build-deploy:
    jobs:
      - test_deploy:
          filters:
            branches:
              ignore: master
      - deploy_to_production:
          filters:
            branches:
              only: master